// src/api/settings.ts - –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Ç–æ–ª—å–∫–æ —Å sh_site_settings
import { supabase, createApiResponse, type ApiResponse } from '../lib/supabase';

// –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∞–π—Ç–∞ –¢–û–õ–¨–ö–û –∏–∑ –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã sh_site_settings
export const getSiteSettings = async (): Promise<ApiResponse<any>> => {
  try {
    console.log('üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ sh_site_settings...');
    
    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¢–û–õ–¨–ö–û –∏–∑ –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã
    const { data: settings, error } = await supabase
      .from('sh_site_settings')
      .select('*')
      .eq('is_active', true)
      .order('created_at', { ascending: false })
      .limit(1)
      .maybeSingle();

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
      throw error;
    }

    if (!settings) {
      console.warn('‚ö†Ô∏è –ê–∫—Ç–∏–≤–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —Å–æ–∑–¥–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ');
      // –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫, —Å–æ–∑–¥–∞–µ–º –∏—Ö
      const defaultSettings = await createDefaultSiteSettings();
      return defaultSettings;
    }

    console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', settings);
    return createApiResponse(settings);

  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
    
    // –í —Å–ª—É—á–∞–µ –ª—é–±–æ–π –æ—à–∏–±–∫–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º hardcoded –¥–µ—Ñ–æ–ª—Ç—ã —Å –∫—É—Ä—Å–∞–º–∏
    return createApiResponse({
      site_title: 'Science Hub',
      site_description: '–ù–∞—É—á–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –≤ –°–µ—Ä–±–∏–∏',
      navigation_items: [
        { id: 'home', label: '–ì–ª–∞–≤–Ω–∞—è', path: '/', visible: true, order: 0 },
        { id: 'events', label: '–°–æ–±—ã—Ç–∏—è', path: '/events', visible: true, order: 1 },
        { id: 'courses', label: '–ö—É—Ä—Å—ã', path: '/courses', visible: true, order: 2 },
        { id: 'speakers', label: '–°–ø–∏–∫–µ—Ä—ã', path: '/speakers', visible: true, order: 3 },
        { id: 'coworking', label: '–ö–æ–≤–æ—Ä–∫–∏–Ω–≥', path: '/coworking', visible: true, order: 4 },
        { id: 'rent', label: '–ê—Ä–µ–Ω–¥–∞', path: '/rent', visible: true, order: 5 },
        { id: 'about', label: '–û –Ω–∞—Å', path: '/about', visible: true, order: 6 }
      ],
      footer_settings: {
        email: 'info@sciencehub.site',
        phone: '+381 123 456 789',
        address: 'Science Hub, –ü–∞–Ω—á–µ–≤–æ, –°–µ—Ä–±–∏—è',
        workingHours: '–ü–Ω-–ü—Ç: 9:00-22:00, –°–±-–í—Å: 10:00-20:00',
        socialLinks: {
          telegram: 'https://t.me/sciencehub',
          instagram: 'https://instagram.com/sciencehub',
          youtube: 'https://youtube.com/sciencehub'
        }
      },
      navigation_style: {
        style: 'classic',
        spacing: 'normal',
        alignment: 'center',
        showBorder: true,
        showShadow: true,
        stickyHeader: true,
        mobileCollapse: true
      },
      is_active: true
    });
  }
};

// –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∞–π—Ç–∞
const createDefaultSiteSettings = async (): Promise<ApiResponse<any>> => {
  try {
    console.log('üîß –°–æ–∑–¥–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞...');
    
    const defaultData = {
      site_title: 'Science Hub',
      site_description: '–ù–∞—É—á–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –≤ –°–µ—Ä–±–∏–∏',
      navigation_items: [
        { id: 'home', label: '–ì–ª–∞–≤–Ω–∞—è', path: '/', visible: true, order: 0 },
        { id: 'events', label: '–°–æ–±—ã—Ç–∏—è', path: '/events', visible: true, order: 1 },
        { id: 'courses', label: '–ö—É—Ä—Å—ã', path: '/courses', visible: true, order: 2 },
        { id: 'speakers', label: '–°–ø–∏–∫–µ—Ä—ã', path: '/speakers', visible: true, order: 3 },
        { id: 'coworking', label: '–ö–æ–≤–æ—Ä–∫–∏–Ω–≥', path: '/coworking', visible: true, order: 4 },
        { id: 'rent', label: '–ê—Ä–µ–Ω–¥–∞', path: '/rent', visible: true, order: 5 },
        { id: 'about', label: '–û –Ω–∞—Å', path: '/about', visible: true, order: 6 }
      ],
      navigation_style: {
        style: 'classic',
        spacing: 'normal',
        alignment: 'center',
        showBorder: true,
        showShadow: true,
        stickyHeader: true,
        mobileCollapse: true
      },
      footer_settings: {
        email: 'info@sciencehub.site',
        phone: '+381 123 456 789',
        address: 'Science Hub, –ü–∞–Ω—á–µ–≤–æ, –°–µ—Ä–±–∏—è',
        customText: '',
        socialLinks: {
          telegram: 'https://t.me/sciencehub',
          instagram: 'https://instagram.com/sciencehub',
          youtube: 'https://youtube.com/sciencehub'
        },
        workingHours: '–ü–Ω-–ü—Ç: 9:00-22:00, –°–±-–í—Å: 10:00-20:00',
        showCopyright: true
      },
      homepage_hero_section: {
        style: 'centered',
        title: 'Science Hub',
        enabled: true,
        subtitle: '–ú–µ—Å—Ç–æ –¥–ª—è –Ω–∞—É—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞',
        ctaButton: {
          link: '/about',
          text: '–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ'
        },
        backgroundImage: ''
      },
      homepage_about_section: {
        image: '',
        order: 1,
        title: '–û –Ω–∞—Å',
        enabled: true,
        description: ''
      },
      homepage_events_section: {
        order: 2,
        title: '–ë–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è',
        enabled: true,
        showCount: 3,
        showFilters: true
      },
      homepage_services_section: {
        items: [],
        order: 3,
        title: '–ù–∞—à–∏ —É—Å–ª—É–≥–∏',
        enabled: true
      },
      about_page_settings: {
        title: '–û –Ω–∞—Å',
        heroImage: '',
        contactInfo: {},
        projectInfo: 'Science Hub - —ç—Ç–æ –º–µ—Å—Ç–æ –¥–ª—è –Ω–∞—É—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –≤ –°–µ—Ä–±–∏–∏',
        teamMembers: [],
        contributors: [],
        metaDescription: '',
        supportPlatforms: []
      },
      rent_page_settings: {
        title: '–ê—Ä–µ–Ω–¥–∞ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞',
        photos: [],
        amenities: [],
        heroImage: '',
        pricelist: [],
        mainPrices: {},
        contactInfo: {},
        description: '',
        metaDescription: '',
        includedServices: []
      },
      coworking_page_settings: {
        title: '–ö–æ–≤–æ—Ä–∫–∏–Ω–≥',
        services: [],
        heroImage: '',
        description: '',
        mainServices: [],
        metaDescription: ''
      },
      events_page_settings: {
        title: '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
        heroImage: '',
        defaultView: 'grid',
        showFilters: true,
        itemsPerPage: 12,
        metaDescription: ''
      },
      speakers_page_settings: {
        title: '–°–ø–∏–∫–µ—Ä—ã',
        showBio: true,
        heroImage: '',
        defaultView: 'grid',
        itemsPerPage: 16,
        metaDescription: ''
      },
      is_active: true
    };

    // –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏
    await supabase
      .from('sh_site_settings')
      .update({ is_active: false })
      .eq('is_active', true);

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
    const { data: newSettings, error } = await supabase
      .from('sh_site_settings')
      .insert([defaultData])
      .select()
      .single();

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
      throw error;
    }

    console.log('‚úÖ –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã:', newSettings);
    return createApiResponse(newSettings);

  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
    throw error;
  }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
export const getNavigationItems = async (): Promise<ApiResponse<any[]>> => {
  try {
    console.log('üîç –ó–∞–≥—Ä—É–∂–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...');
    
    const siteSettings = await getSiteSettings();
    
    if (siteSettings.error || !siteSettings.data?.navigation_items) {
      console.warn('‚ö†Ô∏è –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç —Å –∫—É—Ä—Å–∞–º–∏');
      return createApiResponse([
        { id: 'home', label: '–ì–ª–∞–≤–Ω–∞—è', path: '/', visible: true, order: 0 },
        { id: 'events', label: '–°–æ–±—ã—Ç–∏—è', path: '/events', visible: true, order: 1 },
        { id: 'courses', label: '–ö—É—Ä—Å—ã', path: '/courses', visible: true, order: 2 },
        { id: 'speakers', label: '–°–ø–∏–∫–µ—Ä—ã', path: '/speakers', visible: true, order: 3 },
        { id: 'coworking', label: '–ö–æ–≤–æ—Ä–∫–∏–Ω–≥', path: '/coworking', visible: true, order: 4 },
        { id: 'rent', label: '–ê—Ä–µ–Ω–¥–∞', path: '/rent', visible: true, order: 5 },
        { id: 'about', label: '–û –Ω–∞—Å', path: '/about', visible: true, order: 6 }
      ]);
    }

    console.log('‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', siteSettings.data.navigation_items);
    return createApiResponse(siteSettings.data.navigation_items);
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', error);
    return createApiResponse([
      { id: 'home', label: '–ì–ª–∞–≤–Ω–∞—è', path: '/', visible: true, order: 0 },
      { id: 'events', label: '–°–æ–±—ã—Ç–∏—è', path: '/events', visible: true, order: 1 },
      { id: 'courses', label: '–ö—É—Ä—Å—ã', path: '/courses', visible: true, order: 2 },
      { id: 'speakers', label: '–°–ø–∏–∫–µ—Ä—ã', path: '/speakers', visible: true, order: 3 },
      { id: 'coworking', label: '–ö–æ–≤–æ—Ä–∫–∏–Ω–≥', path: '/coworking', visible: true, order: 4 },
      { id: 'rent', label: '–ê—Ä–µ–Ω–¥–∞', path: '/rent', visible: true, order: 5 },
      { id: 'about', label: '–û –Ω–∞—Å', path: '/about', visible: true, order: 6 }
    ]);
  }
};

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∞–π—Ç–∞ (—Ç–æ–ª—å–∫–æ –Ω–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞)
export const updateSiteSettings = async (settings: any): Promise<ApiResponse<any>> => {
  try {
    console.log('üíæ –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const { data: currentSettings } = await supabase
      .from('sh_site_settings')
      .select('id')
      .eq('is_active', true)
      .single();

    if (currentSettings) {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–ø–∏—Å—å
      const { data, error } = await supabase
        .from('sh_site_settings')
        .update({
          ...settings,
          updated_at: new Date().toISOString()
        })
        .eq('id', currentSettings.id)
        .select()
        .single();

      if (error) throw error;
      
      console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã:', data);
      return createApiResponse(data);
    } else {
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ–π –Ω–µ—Ç
      const { data, error } = await supabase
        .from('sh_site_settings')
        .insert([{
          ...settings,
          is_active: true
        }])
        .select()
        .single();

      if (error) throw error;
      
      console.log('‚úÖ –ù–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–∑–¥–∞–Ω—ã:', data);
      return createApiResponse(data);
    }
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
    return createApiResponse(null, error);
  }
};

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
export const updateNavigation = async (navigationItems: any[], navigationStyle?: any): Promise<ApiResponse<any>> => {
  try {
    console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é...');
    
    const updates: any = {
      navigation_items: navigationItems,
      updated_at: new Date().toISOString()
    };

    if (navigationStyle) {
      updates.navigation_style = navigationStyle;
    }

    const result = await updateSiteSettings(updates);
    
    if (result.error) {
      throw new Error(result.error);
    }

    console.log('‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
    return result;
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', error);
    return createApiResponse(null, error);
  }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∞–π—Ç–∞
export const getOrCreateSiteSettings = async (): Promise<ApiResponse<any>> => {
  try {
    const settings = await getSiteSettings();
    
    if (settings.data) {
      return settings;
    }
    
    // –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ
    return await createDefaultSiteSettings();
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏/—Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
    return createApiResponse(null, error);
  }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ—É—Ç–µ—Ä–∞
export const getFooterSettings = async (): Promise<ApiResponse<any>> => {
  try {
    const siteSettings = await getSiteSettings();
    
    if (siteSettings.error || !siteSettings.data?.footer_settings) {
      return createApiResponse({
        email: 'info@sciencehub.site',
        phone: '+381 123 456 789',
        address: 'Science Hub, –ü–∞–Ω—á–µ–≤–æ, –°–µ—Ä–±–∏—è',
        workingHours: '–ü–Ω-–ü—Ç: 9:00-22:00, –°–±-–í—Å: 10:00-20:00',
        socialLinks: {
          telegram: 'https://t.me/sciencehub',
          instagram: 'https://instagram.com/sciencehub',
          youtube: 'https://youtube.com/sciencehub'
        }
      });
    }

    return createApiResponse(siteSettings.data.footer_settings);
  } catch (error) {
    console.error('Error fetching footer settings:', error);
    return createApiResponse({
      email: '',
      phone: '',
      address: '',
      workingHours: '',
      socialLinks: {
        telegram: '',
        instagram: '',
        youtube: ''
      }
    });
  }
};