// src/api/settings.ts - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å —Ç–∞–π–º–∞—É—Ç–∞–º–∏
import { supabase, createApiResponse, createPaginatedResponse } from '../lib/supabase';

interface ApiResponse<T> {
  data: T | null;
  error: string | null;
}

// –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–π–º–∞—É—Ç –∫ –∑–∞–ø—Ä–æ—Å–∞–º Supabase
const withTimeout = async <T>(promise: Promise<T>, timeoutMs: number = 5000): Promise<T> => {
  const timeoutPromise = new Promise<never>((_, reject) => {
    setTimeout(() => reject(new Error(`Request timeout after ${timeoutMs}ms`)), timeoutMs);
  });
  
  return Promise.race([promise, timeoutPromise]);
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∞–π—Ç–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
export const getSiteSettings = async (): Promise<ApiResponse<any>> => {
  try {
    console.log('üîß API: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∞–π—Ç–∞...');
    
    const { data, error } = await withTimeout(
      supabase
        .from('sh_site_settings')
        .select('*')
        .eq('is_active', true)
        .single(),
      3000 // 3 —Å–µ–∫—É–Ω–¥—ã —Ç–∞–π–º–∞—É—Ç
    );

    if (error) {
      console.warn('üîß API: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
      return createApiResponse(null, error);
    }

    console.log('‚úÖ API: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞ –ø–æ–ª—É—á–µ–Ω—ã');
    return createApiResponse(data);
  } catch (error) {
    console.error('‚ùå API: –¢–∞–π–º–∞—É—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
    return createApiResponse(null, error);
  }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å fallback
export const getNavigationItems = async (): Promise<ApiResponse<any[]>> => {
  try {
    console.log('üîß API: –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...');
    
    const siteSettings = await getSiteSettings();
    
    if (siteSettings.error || !siteSettings.data?.navigation_items) {
      console.log('üîß API: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ fallback –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
      return createApiResponse(getDefaultNavigation());
    }

    const navItems = siteSettings.data.navigation_items;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –º–∞—Å—Å–∏–≤ –∏ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–º–µ—é—Ç –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è
    if (!Array.isArray(navItems) || navItems.length === 0) {
      console.log('üîß API: –ù–µ–≤–∞–ª–∏–¥–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
      return createApiResponse(getDefaultNavigation());
    }

    // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const validNavItems = navItems.filter(item => 
      item && 
      typeof item === 'object' && 
      item.id && 
      item.label && 
      item.path
    ).map(item => ({
      ...item,
      visible: item.visible !== false, // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é true
      order: typeof item.order === 'number' ? item.order : 0
    }));

    if (validNavItems.length === 0) {
      console.log('üîß API: –ù–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
      return createApiResponse(getDefaultNavigation());
    }

    console.log('‚úÖ API: –ó–∞–≥—Ä—É–∂–µ–Ω–æ', validNavItems.length, '—ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
    return createApiResponse(validNavItems);
    
  } catch (error) {
    console.error('‚ùå API: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', error);
    return createApiResponse(getDefaultNavigation());
  }
};

// –î–µ—Ñ–æ–ª—Ç–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
const getDefaultNavigation = () => [
  { id: 'home', label: '–ì–ª–∞–≤–Ω–∞—è', path: '/', visible: true, order: 0 },
  { id: 'events', label: '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', path: '/events', visible: true, order: 1 },
  { id: 'courses', label: '–ö—É—Ä—Å—ã', path: '/courses', visible: true, order: 2 },
  { id: 'speakers', label: '–°–ø–∏–∫–µ—Ä—ã', path: '/speakers', visible: true, order: 3 },
  { id: 'coworking', label: '–ö–æ–≤–æ—Ä–∫–∏–Ω–≥', path: '/coworking', visible: true, order: 4 },
  { id: 'rent', label: '–ê—Ä–µ–Ω–¥–∞', path: '/rent', visible: true, order: 5 },
  { id: 'about', label: '–û –Ω–∞—Å', path: '/about', visible: true, order: 6 }
];

// –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç–æ–ø–±–∞—Ä–∞ —Å fallback
export const getTopbarSettings = async (): Promise<ApiResponse<any>> => {
  try {
    console.log('üîß API: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç–æ–ø–±–∞—Ä–∞...');
    
    const siteSettings = await getSiteSettings();
    
    if (siteSettings.error || !siteSettings.data) {
      console.log('üîß API: –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ–ø–±–∞—Ä–∞');
      return createApiResponse(getDefaultTopbarSettings());
    }

    const navigationStyle = siteSettings.data.navigation_style || {};
    
    const topbarSettings = {
      height: navigationStyle.height || 'standard',
      alignment: navigationStyle.alignment || 'center',
      style: navigationStyle.style || 'classic',
      spacing: navigationStyle.spacing || 'normal',
      showBorder: navigationStyle.showBorder !== false,
      showShadow: navigationStyle.showShadow !== false,
      stickyHeader: navigationStyle.stickyHeader !== false,
      mobileCollapse: navigationStyle.mobileCollapse !== false
    };

    console.log('‚úÖ API: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ–ø–±–∞—Ä–∞ –ø–æ–ª—É—á–µ–Ω—ã');
    return createApiResponse(topbarSettings);
    
  } catch (error) {
    console.error('‚ùå API: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç–æ–ø–±–∞—Ä–∞:', error);
    return createApiResponse(getDefaultTopbarSettings());
  }
};

// –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ–ø–±–∞—Ä–∞
const getDefaultTopbarSettings = () => ({
  height: 'standard',
  alignment: 'center',
  style: 'classic',
  spacing: 'normal',
  showBorder: true,
  showShadow: true,
  stickyHeader: true,
  mobileCollapse: true
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∞–π—Ç–∞ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
export const getOrCreateSiteSettings = async (): Promise<ApiResponse<any>> => {
  try {
    console.log('üîß API: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∞–π—Ç–∞...');
    
    const settings = await getSiteSettings();
    
    if (settings.data) {
      console.log('‚úÖ API: –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–π–¥–µ–Ω—ã');
      return settings;
    }
    
    // –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ—Ç, –ø—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ
    console.log('üîß API: –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫...');
    
    try {
      const defaultSettings = await createDefaultSiteSettings();
      console.log('‚úÖ API: –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–∑–¥–∞–Ω—ã');
      return defaultSettings;
    } catch (createError) {
      console.error('‚ùå API: –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫:', createError);
      
      // –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º —Å–æ–∑–¥–∞—Ç—å –≤ –±–∞–∑–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º fallback –æ–±—ä–µ–∫—Ç
      const fallbackSettings = {
        navigation_items: getDefaultNavigation(),
        navigation_style: getDefaultTopbarSettings(),
        footer_settings: {
          email: 'info@sciencehub.site',
          phone: '+381 123 456 789',
          address: 'Science Hub, –ü–∞–Ω—á–µ–≤–æ, –°–µ—Ä–±–∏—è',
          workingHours: '–ü–Ω-–ü—Ç: 9:00-22:00',
          socialLinks: {
            telegram: '',
            instagram: '',
            youtube: ''
          }
        }
      };
      
      console.log('‚ö†Ô∏è API: –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –Ω–∞—Å—Ç—Ä–æ–π–∫–∏');
      return createApiResponse(fallbackSettings);
    }
    
  } catch (error) {
    console.error('‚ùå API: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏:', error);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ fallback –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const emergencyFallback = {
      navigation_items: getDefaultNavigation(),
      navigation_style: getDefaultTopbarSettings(),
      footer_settings: {}
    };
    
    return createApiResponse(emergencyFallback);
  }
};

// –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∞–π—Ç–∞
const createDefaultSiteSettings = async (): Promise<ApiResponse<any>> => {
  try {
    const defaultData = {
      navigation_items: getDefaultNavigation(),
      navigation_style: getDefaultTopbarSettings(),
      footer_settings: {
        email: 'info@sciencehub.site',
        phone: '+381 123 456 789',
        address: 'Science Hub, –ü–∞–Ω—á–µ–≤–æ, –°–µ—Ä–±–∏—è',
        workingHours: '–ü–Ω-–ü—Ç: 9:00-22:00, –°–±-–í—Å: 10:00-20:00',
        socialLinks: {
          telegram: 'https://t.me/sciencehub',
          instagram: 'https://instagram.com/sciencehub',
          youtube: 'https://youtube.com/sciencehub'
        }
      },
      about_page_settings: {
        title: '–û Science Hub',
        projectInfo: 'Science Hub - —ç—Ç–æ –º–µ—Å—Ç–æ –¥–ª—è –Ω–∞—É—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –≤ –°–µ—Ä–±–∏–∏',
        teamMembers: [],
        contributors: [],
        supportPlatforms: []
      },
      is_active: true
    };

    // –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    await withTimeout(
      supabase
        .from('sh_site_settings')
        .update({ is_active: false })
        .eq('is_active', true),
      2000
    );

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    const { data: newSettings, error } = await withTimeout(
      supabase
        .from('sh_site_settings')
        .insert([defaultData])
        .select()
        .single(),
      3000
    );

    if (error) {
      throw error;
    }

    return createApiResponse(newSettings);

  } catch (error) {
    console.error('‚ùå API: –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
    throw error;
  }
};

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∞–π—Ç–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
export const updateSiteSettings = async (settings: any): Promise<ApiResponse<any>> => {
  try {
    console.log('üîß API: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∞–π—Ç–∞...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    const { data: currentSettings } = await withTimeout(
      supabase
        .from('sh_site_settings')
        .select('id')
        .eq('is_active', true)
        .single(),
      2000
    );

    if (currentSettings) {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–ø–∏—Å—å
      const { data, error } = await withTimeout(
        supabase
          .from('sh_site_settings')
          .update({
            ...settings,
            updated_at: new Date().toISOString()
          })
          .eq('id', currentSettings.id)
          .select()
          .single(),
        3000
      );

      if (error) throw error;
      
      console.log('‚úÖ API: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
      return createApiResponse(data);
    } else {
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ–π –Ω–µ—Ç
      const { data, error } = await withTimeout(
        supabase
          .from('sh_site_settings')
          .insert([{
            ...settings,
            is_active: true
          }])
          .select()
          .single(),
        3000
      );

      if (error) throw error;
      
      console.log('‚úÖ API: –ù–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–∑–¥–∞–Ω—ã');
      return createApiResponse(data);
    }
  } catch (error) {
    console.error('‚ùå API: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
    return createApiResponse(null, error);
  }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ—É—Ç–µ—Ä–∞
export const getFooterSettings = async (): Promise<ApiResponse<any>> => {
  try {
    const siteSettings = await getSiteSettings();
    
    if (siteSettings.error || !siteSettings.data?.footer_settings) {
      return createApiResponse({
        email: 'info@sciencehub.site',
        phone: '+381 123 456 789',
        address: 'Science Hub, –ü–∞–Ω—á–µ–≤–æ, –°–µ—Ä–±–∏—è',
        workingHours: '–ü–Ω-–ü—Ç: 9:00-22:00',
        socialLinks: {
          telegram: '',
          instagram: '',
          youtube: ''
        }
      });
    }

    return createApiResponse(siteSettings.data.footer_settings);
  } catch (error) {
    console.error('‚ùå API: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ—É—Ç–µ—Ä–∞:', error);
    return createApiResponse(null, error);
  }
};