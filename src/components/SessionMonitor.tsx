// src/components/SessionMonitor.tsx - –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
import { useEffect, useRef } from 'react';
import { supabase, clearStoredSession } from '../lib/supabase';
import { toast } from 'react-hot-toast';
import { useAuth } from '../contexts/AuthContext';

/**
 * –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
 * –†–∞–±–æ—Ç–∞–µ—Ç —Å–æ–≤–º–µ—Å—Ç–Ω–æ —Å AuthContext, –∏–∑–±–µ–≥–∞—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
 */
const SessionMonitor = () => {
  const { user, loading, isQuickReturn } = useAuth();
  const sessionCheckInterval = useRef<NodeJS.Timeout | null>(null);
  const lastSessionCheck = useRef<number>(Date.now());
  const sessionLostNotificationShown = useRef<boolean>(false);
  const isMonitoring = useRef<boolean>(false);

  useEffect(() => {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞
    if (loading || isQuickReturn) {
      console.log('üîç SessionMonitor: –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
      return;
    }

    // –ù–µ –∑–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –µ—Å–ª–∏ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    if (isMonitoring.current) {
      return;
    }

    console.log('üîç SessionMonitor: –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–µ—Å—Å–∏–∏');
    isMonitoring.current = true;

    // –§—É–Ω–∫—Ü–∏—è –õ–ï–ì–ö–û–ô –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏ (–Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É–µ—Ç —Å AuthContext)
    const checkSessionHealth = async () => {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –µ—Å–ª–∏ AuthContext –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
      if (loading || isQuickReturn) {
        console.log('üîç SessionMonitor: –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É - AuthContext –∑–∞–Ω—è—Ç');
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
      if (!navigator.onLine) {
        console.log('üîç SessionMonitor: –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É');
        return;
      }

      try {
        // –í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ localStorage
        // —á—Ç–æ–±—ã –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å —Å AuthContext
        const storedAuth = localStorage.getItem('sb-auth-token');
        
        if (!storedAuth && user) {
          // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, –Ω–æ –Ω–µ—Ç –≤ localStorage - –ø—Ä–æ–±–ª–µ–º–∞
          console.warn('üîç SessionMonitor: –†–∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å, —Å–µ—Å—Å–∏–∏ –Ω–µ—Ç');
          handleSessionLost();
          return;
        }

        if (storedAuth) {
          try {
            const session = JSON.parse(storedAuth);
            const expiresAt = session.expires_at ? new Date(session.expires_at).getTime() : 0;
            const now = Date.now();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –∏—Å—Ç–µ–∫ –ª–∏ —Ç–æ–∫–µ–Ω
            if (expiresAt > 0 && expiresAt < now) {
              console.warn('üîç SessionMonitor: –¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫');
              handleSessionLost();
              return;
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
            lastSessionCheck.current = Date.now();
            sessionLostNotificationShown.current = false;
            
            // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –∏—Å—Ç–µ–∫–∞–µ—Ç –≤ –±–ª–∏–∂–∞–π—à–∏–µ 5 –º–∏–Ω—É—Ç - —É–≤–µ–¥–æ–º–ª—è–µ–º AuthContext
            if (expiresAt > 0 && expiresAt - now < 300000) {
              console.log('üîç SessionMonitor: –¢–æ–∫–µ–Ω —Å–∫–æ—Ä–æ –∏—Å—Ç–µ—á–µ—Ç, —É–≤–µ–¥–æ–º–ª—è–µ–º AuthContext');
              // –ù–µ –≤—ã–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é - –ø—É—Å—Ç—å AuthContext —Å–∞–º —Ä–µ—à–∞–µ—Ç
            }
            
          } catch (parseError) {
            console.error('üîç SessionMonitor: –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–µ—Å—Å–∏–∏:', parseError);
            handleSessionLost();
          }
        }

      } catch (error) {
        console.error('üîç SessionMonitor: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–µ—Å—Å–∏–∏:', error);
        
        // –¢–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
        if (error instanceof Error && 
            (error.message.includes('refresh_token_not_found') || 
             error.message.includes('invalid_token'))) {
          handleSessionLost();
        }
      }
    };

    // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Ç–µ—Ä–∏ —Å–µ—Å—Å–∏–∏
    const handleSessionLost = () => {
      if (!sessionLostNotificationShown.current) {
        console.warn('üîç SessionMonitor: –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–æ—Ç–µ—Ä—è —Å–µ—Å—Å–∏–∏');
        
        // –û—á–∏—â–∞–µ–º –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        clearStoredSession();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
        toast.error('–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –∑–∞–Ω–æ–≤–æ.', {
          duration: 5000,
          id: 'session-expired'
        });
        
        sessionLostNotificationShown.current = true;
        
        // –î–µ–ª–∏–∫–∞—Ç–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
        supabase.auth.signOut().catch(error => {
          console.error('üîç SessionMonitor: –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ:', error);
        });
      }
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Å—Å–∏—é –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥ (—Ä–µ–∂–µ —á–µ–º —Ä–∞–Ω—å—à–µ)
    sessionCheckInterval.current = setInterval(checkSessionHealth, 60000);
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–≤—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ (–¥–∞–µ–º AuthContext –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è)
    const initialCheckTimeout = setTimeout(checkSessionHealth, 5000);

    // –ù–ï —Å–ª—É—à–∞–µ–º visibilitychange - —ç—Ç–æ –¥–µ–ª–∞–µ—Ç AuthContext
    // –ù–ï —Å–ª—É—à–∞–µ–º focus - —ç—Ç–æ —Ç–æ–∂–µ –¥–µ–ª–∞–µ—Ç AuthContext

    // Cleanup —Ñ—É–Ω–∫—Ü–∏—è
    return () => {
      console.log('üîç SessionMonitor: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–µ—Å—Å–∏–∏');
      
      isMonitoring.current = false;
      
      if (sessionCheckInterval.current) {
        clearInterval(sessionCheckInterval.current);
        sessionCheckInterval.current = null;
      }
      
      clearTimeout(initialCheckTimeout);
    };
  }, [loading, isQuickReturn, user]); // –ó–∞–≤–∏—Å–∏–º –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç –Ω–∏—á–µ–≥–æ
  return null;
};

export default SessionMonitor;