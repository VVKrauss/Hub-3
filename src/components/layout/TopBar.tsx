// src/components/layout/TopBar.tsx
// –ï–î–ò–ù–°–¢–í–ï–ù–ù–´–ô –§–ê–ô–õ TopBar - –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–µ–ª–∞–µ–º –∑–¥–µ—Å—å!

import { useState, useEffect, useRef } from 'react';
import { Link, useLocation } from 'react-router-dom';
import { Menu, X, Sun, Moon } from 'lucide-react';
import { getNavigationItems } from '../../api/settings';

interface NavItem {
  id: string;
  label: string;
  path: string;
  visible: boolean;
  order?: number;
}

// –†–∞–±–æ—á–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å –∫—É—Ä—Å–∞–º–∏
const DEFAULT_NAV_ITEMS: NavItem[] = [
  { id: 'home', label: '–ì–ª–∞–≤–Ω–∞—è', path: '/', visible: true, order: 0 },
  { id: 'events', label: '–°–æ–±—ã—Ç–∏—è', path: '/events', visible: true, order: 1 },
  { id: 'courses', label: '–ö—É—Ä—Å—ã', path: '/courses', visible: true, order: 2 },
  { id: 'speakers', label: '–°–ø–∏–∫–µ—Ä—ã', path: '/speakers', visible: true, order: 3 },
  { id: 'coworking', label: '–ö–æ–≤–æ—Ä–∫–∏–Ω–≥', path: '/coworking', visible: true, order: 4 },
  { id: 'rent', label: '–ê—Ä–µ–Ω–¥–∞', path: '/rent', visible: true, order: 5 },
  { id: 'about', label: '–û –Ω–∞—Å', path: '/about', visible: true, order: 6 }
];

const TopBar = () => {
  const location = useLocation();
  
  // –û—Å–Ω–æ–≤–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const [navItems, setNavItems] = useState<NavItem[]>(DEFAULT_NAV_ITEMS);
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
  const [theme, setTheme] = useState<'light' | 'dark'>('light');
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  const [debugInfo, setDebugInfo] = useState({
    apiLoaded: false,
    supabaseIssues: false,
    version: 'stable-no-auth'
  });
  
  const menuRef = useRef<HTMLDivElement>(null);
  const isMountedRef = useRef(true);

  // –®–ê–ì–ò –î–û–ë–ê–í–õ–ï–ù–ò–Ø –§–£–ù–ö–¶–ò–ô:
  // 1. –ë–∞–∑–æ–≤—ã–π TopBar (–¢–ï–ö–£–©–ò–ô) ‚úÖ
  // 2. + API –Ω–∞–≤–∏–≥–∞—Ü–∏—è 
  // 3. + –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
  // 4. + ThemeContext
  // 5. + –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã
  useEffect(() => {
    console.log('üé® TopBar: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã...');
    const savedTheme = localStorage.getItem('theme') as 'light' | 'dark' | null;
    if (savedTheme) {
      setTheme(savedTheme);
      document.documentElement.classList.toggle('dark', savedTheme === 'dark');
    }
  }, []);

  // –§–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–∑ API
  useEffect(() => {
    const loadNavigationInBackground = async () => {
      try {
        console.log('üîÑ TopBar: –§–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–∑ API...');
        
        const timeoutPromise = new Promise((_, reject) => 
          setTimeout(() => reject(new Error('API timeout')), 1500)
        );
        
        const response = await Promise.race([getNavigationItems(), timeoutPromise]);
        
        if (!isMountedRef.current) return;
        
        if (response?.data && Array.isArray(response.data) && response.data.length > 0) {
          const sortedItems = response.data.sort((a, b) => (a.order || 0) - (b.order || 0));
          setNavItems(sortedItems);
          setDebugInfo(prev => ({ ...prev, apiLoaded: true }));
          console.log('‚úÖ TopBar: API –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞', sortedItems);
        } else {
          console.log('‚ÑπÔ∏è TopBar: API –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç');
        }
      } catch (error) {
        console.log('‚ÑπÔ∏è TopBar: –§–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ API –Ω–µ —É–¥–∞–ª–∞—Å—å:', error.message);
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å Supabase
        if (error.message.includes('Multiple GoTrueClient')) {
          setDebugInfo(prev => ({ ...prev, supabaseIssues: true }));
        }
      }
    };

    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä
    const timer = setTimeout(loadNavigationInBackground, 100);
    
    return () => {
      isMountedRef.current = false;
      clearTimeout(timer);
    };
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω–µ –º–µ–Ω—é
  useEffect(() => {
    if (mobileMenuOpen) {
      const handleClickOutside = (event: MouseEvent) => {
        if (menuRef.current && !menuRef.current.contains(event.target as Node)) {
          setMobileMenuOpen(false);
        }
      };
      document.addEventListener('mousedown', handleClickOutside);
      return () => document.removeEventListener('mousedown', handleClickOutside);
    }
  }, [mobileMenuOpen]);

  const toggleTheme = () => {
    const newTheme = theme === 'light' ? 'dark' : 'light';
    setTheme(newTheme);
    localStorage.setItem('theme', newTheme);
    document.documentElement.classList.toggle('dark', newTheme === 'dark');
  };

  const visibleNavItems = navItems.filter(item => item.visible);

  return (
    <header className="sticky top-0 z-50 bg-white dark:bg-gray-900 shadow-sm border-b border-gray-200 dark:border-gray-700">
      <div className="container mx-auto px-4">
        <div className="flex items-center justify-between py-3">
          
          {/* Logo */}
          <Link to="/" className="flex items-center" onClick={() => setMobileMenuOpen(false)}>
            <div className="h-10 w-10 bg-blue-600 rounded-lg flex items-center justify-center">
              <span className="text-white font-bold text-lg">SH</span>
            </div>
            <span className="ml-2 text-xl font-bold text-gray-900 dark:text-white hidden sm:block">
              Science Hub
            </span>
          </Link>
          
          {/* Desktop Navigation */}
          <nav className="hidden md:flex items-center justify-center flex-1 space-x-6">
            {visibleNavItems.map(item => (
              <Link 
                key={item.id}
                to={item.path} 
                className={`font-medium py-2 px-3 rounded-md transition-colors duration-200 ${
                  location.pathname === item.path 
                    ? 'text-blue-600 bg-blue-50 dark:text-blue-400 dark:bg-blue-900/20' 
                    : 'text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 hover:bg-gray-50 dark:hover:bg-gray-800'
                }`}
              >
                {item.label}
              </Link>
            ))}
          </nav>

          {/* Desktop Controls */}
          <div className="hidden md:flex items-center space-x-3">
            <button
              onClick={toggleTheme}
              className="p-2 rounded-lg text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors"
              aria-label="–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É"
            >
              {theme === 'dark' ? <Sun className="h-5 w-5" /> : <Moon className="h-5 w-5" />}
            </button>
            
            {/* –ü—Ä–æ—Å—Ç–∞—è –∫–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞ - –ü–û–ö–ê –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ */}
            <Link
              to="/login"
              className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
            >
              –í–æ–π—Ç–∏
            </Link>
          </div>

          {/* Mobile Menu Button */}
          <div className="md:hidden">
            <button
              onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
              className="p-2 rounded-lg text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors"
              aria-label="–ú–µ–Ω—é"
            >
              {mobileMenuOpen ? <X className="h-6 w-6" /> : <Menu className="h-6 w-6" />}
            </button>
          </div>
        </div>

        {/* Mobile Navigation */}
        {mobileMenuOpen && (
          <div ref={menuRef} className="md:hidden border-t border-gray-200 dark:border-gray-700 py-4">
            <nav className="space-y-2">
              {visibleNavItems.map(item => (
                <Link
                  key={item.id}
                  to={item.path}
                  onClick={() => setMobileMenuOpen(false)}
                  className={`block py-3 px-4 rounded-lg transition-colors duration-200 ${
                    location.pathname === item.path 
                      ? 'bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400' 
                      : 'text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800'
                  }`}
                >
                  {item.label}
                </Link>
              ))}
              
              <button
                onClick={toggleTheme}
                className="w-full flex items-center justify-between py-3 px-4 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors"
              >
                <span>–¢–µ–º–∞</span>
                {theme === 'dark' ? <Sun className="h-5 w-5" /> : <Moon className="h-5 w-5" />}
              </button>

              <Link
                to="/login"
                onClick={() => setMobileMenuOpen(false)}
                className="block w-full mt-3 px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-center"
              >
                –í–æ–π—Ç–∏
              </Link>
            </nav>
          </div>
        )}
      </div>
      
      {/* Debug Panel - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∏ –ø—Ä–æ–±–ª–µ–º—ã */}
      {process.env.NODE_ENV === 'development' && (
        <div className={`border-l-4 p-1 text-xs ${
          debugInfo.supabaseIssues ? 'bg-red-100 border-red-500' : 'bg-blue-100 border-blue-500'
        }`}>
          <span className={debugInfo.supabaseIssues ? 'text-red-700' : 'text-blue-700'}>
            üîß TopBar v{debugInfo.version} | 
            –ù–∞–≤–∏–≥–∞—Ü–∏—è: ‚úÖ ({visibleNavItems.length}) | 
            API: {debugInfo.apiLoaded ? 'üîó –ó–∞–≥—Ä—É–∂–µ–Ω' : 'üì¶ –î–µ—Ñ–æ–ª—Ç'} |
            –ö—É—Ä—Å—ã: ‚úÖ |
            {debugInfo.supabaseIssues && ' ‚ö†Ô∏è Supabase –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã!'}
          </span>
        </div>
      )}
    </header>
  );
};

export default TopBar;

/*
–ü–õ–ê–ù –†–ê–ó–í–ò–¢–ò–Ø –≠–¢–û–ì–û –§–ê–ô–õ–ê:

‚úÖ –®–ê–ì 1: –ë–∞–∑–æ–≤—ã–π TopBar —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –∏ —Ç–µ–º–æ–π (–¢–ï–ö–£–©–ò–ô)
  - –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å –∫—É—Ä—Å–∞–º–∏
  - –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
  - –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
  - –§–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ API

üîÑ –®–ê–ì 2: –î–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é (–°–õ–ï–î–£–Æ–©–ò–ô)
  - import { supabase } from '../../lib/supabase'
  - –°–æ—Å—Ç–æ—è–Ω–∏—è user, authInitialized
  - Auth –ª–æ–≥–∏–∫–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö useEffect
  - –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã LoginModal, UserProfileDropdown

üîÑ –®–ê–ì 3: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å ThemeContext
  - import { useTheme } from '../../contexts/ThemeContext'
  - –ó–∞–º–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ state —Ç–µ–º—ã

üîÑ –®–ê–ì 4: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ TopBar
  - –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞
  - –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –≤—ã—Å–æ—Ç–∞, —Å—Ç–∏–ª–∏

–í–°–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø –¢–û–õ–¨–ö–û –í –≠–¢–û–ú –§–ê–ô–õ–ï!
*/