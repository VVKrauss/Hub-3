// src/components/AppLoadingWrapper.tsx
import { useEffect, useState } from 'react';
import { useAuth } from '../contexts/AuthContext';
import { Loader2, AlertCircle, RefreshCw } from 'lucide-react';

interface AppLoadingWrapperProps {
  children: React.ReactNode;
}

const AppLoadingWrapper = ({ children }: AppLoadingWrapperProps) => {
  const { loading } = useAuth();
  const [showTimeout, setShowTimeout] = useState(false);
  const [loadingStartTime] = useState(Date.now());

  useEffect(() => {
    // –ü–æ–∫–∞–∑–∞—Ç—å –æ–ø—Ü–∏—é –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
    const timeoutTimer = setTimeout(() => {
      if (loading) {
        setShowTimeout(true);
      }
    }, 15000);

    return () => clearTimeout(timeoutTimer);
  }, [loading]);

  const handleReload = () => {
    window.location.reload();
  };

  const handleForceSkip = () => {
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É (—Ç–æ–ª—å–∫–æ –¥–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤)
    localStorage.setItem('force_skip_auth', 'true');
    window.location.reload();
  };

  if (!loading) {
    return <>{children}</>;
  }

  const loadingTime = Math.floor((Date.now() - loadingStartTime) / 1000);

  return (
    <div className="min-h-screen bg-gradient-to-br from-primary-50 to-secondary-50 dark:from-dark-900 dark:to-dark-800 flex items-center justify-center">
      <div className="max-w-md w-full mx-4">
        <div className="bg-white dark:bg-dark-800 rounded-2xl shadow-xl p-8 text-center">
          {/* –õ–æ–≥–æ—Ç–∏–ø –∏–ª–∏ –∏–∫–æ–Ω–∫–∞ */}
          <div className="mb-6">
            <div className="relative mx-auto w-16 h-16">
              <Loader2 className="w-16 h-16 text-primary-600 animate-spin" />
              <div className="absolute inset-0 w-16 h-16 border-4 border-primary-200 dark:border-primary-800 rounded-full"></div>
            </div>
          </div>

          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <h1 className="text-2xl font-bold text-gray-900 dark:text-white mb-2">
            –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
          </h1>

          {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
          <p className="text-gray-600 dark:text-gray-300 mb-6">
            {loadingTime < 5 ? '–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –¥–ª—è –≤–∞—Å...' :
             loadingTime < 10 ? '–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ...' :
             loadingTime < 15 ? '–≠—Ç–æ –∑–∞–π–º–µ—Ç –µ—â–µ –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏...' :
             '–ß—Ç–æ-—Ç–æ –∏–¥–µ—Ç –Ω–µ —Ç–∞–∫...'}
          </p>

          {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä (–∏–º–∏—Ç–∞—Ü–∏—è) */}
          <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 mb-6">
            <div 
              className="bg-gradient-to-r from-primary-600 to-secondary-600 h-2 rounded-full transition-all duration-1000"
              style={{ 
                width: `${Math.min(90, (loadingTime / 15) * 100)}%` 
              }}
            ></div>
          </div>

          {/* –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ */}
          <p className="text-sm text-gray-500 dark:text-gray-400 mb-4">
            –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: {loadingTime}—Å
          </p>

          {/* –î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –¥–æ–ª–≥–æ–π –∑–∞–≥—Ä—É–∑–∫–µ */}
          {showTimeout && (
            <div className="border-t border-gray-200 dark:border-gray-700 pt-6 mt-6">
              <div className="flex items-center justify-center mb-4 text-orange-600 dark:text-orange-400">
                <AlertCircle className="w-5 h-5 mr-2" />
                <span className="text-sm font-medium">–î–æ–ª–≥–∞—è –∑–∞–≥—Ä—É–∑–∫–∞</span>
              </div>
              
              <p className="text-sm text-gray-600 dark:text-gray-300 mb-4">
                –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏, —á–µ–º –æ–±—ã—á–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.
              </p>

              <div className="flex flex-col sm:flex-row gap-3">
                <button
                  onClick={handleReload}
                  className="flex items-center justify-center px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white rounded-lg transition-colors"
                >
                  <RefreshCw className="w-4 h-4 mr-2" />
                  –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
                </button>
                
                <button
                  onClick={handleForceSkip}
                  className="flex items-center justify-center px-4 py-2 bg-gray-300 hover:bg-gray-400 text-gray-700 rounded-lg transition-colors text-sm"
                >
                  –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
                </button>
              </div>

              <p className="text-xs text-gray-500 dark:text-gray-400 mt-4">
                –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
              </p>
            </div>
          )}
        </div>

        {/* –ü–æ–¥—Å–∫–∞–∑–∫–∏ */}
        <div className="mt-6 text-center">
          <p className="text-sm text-gray-500 dark:text-gray-400">
            üí° –°–æ–≤–µ—Ç: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
          </p>
        </div>
      </div>
    </div>
  );
};

export default AppLoadingWrapper;