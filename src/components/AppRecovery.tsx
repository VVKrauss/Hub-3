// src/components/AppRecovery.tsx
import React, { useEffect, useRef, useState } from 'react';
import { RefreshCw, AlertTriangle, CheckCircle, Wifi } from 'lucide-react';
import { supabase } from '../lib/supabase';

const AppRecovery: React.FC = () => {
  const [isRecovering, setIsRecovering] = useState(false);
  const [recoveryStep, setRecoveryStep] = useState<string>('');
  const [showSuccess, setShowSuccess] = useState(false);
  const lastActiveTime = useRef(Date.now());
  const recoveryTimeout = useRef<NodeJS.Timeout>();

  // –§—É–Ω–∫—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
  const recoverApp = async () => {
    if (isRecovering) return;
    
    console.log('üîÑ Starting app recovery...');
    setIsRecovering(true);
    setShowSuccess(false);

    try {
      // –®–∞–≥ 1: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      setRecoveryStep('–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
      console.log('üîê Recovering auth session...');
      
      const { data: { session }, error: sessionError } = await supabase.auth.getSession();
      
      if (sessionError) {
        console.error('‚ùå Session recovery failed:', sessionError);
        // –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω
        setRecoveryStep('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞...');
        const { error: refreshError } = await supabase.auth.refreshSession();
        if (refreshError) {
          console.error('‚ùå Token refresh failed:', refreshError);
          throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
        } else {
          console.log('‚úÖ Token refreshed successfully');
        }
      } else {
        console.log('‚úÖ Session recovered:', { hasSession: !!session, userId: session?.user?.id });
      }

      // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —à–∞–≥–∞–º–∏
      await new Promise(resolve => setTimeout(resolve, 800));

      // –®–∞–≥ 2: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ë–î
      setRecoveryStep('–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
      console.log('üìä Testing database connection...');
      
      const { data: dbTest, error: dbError } = await supabase
        .from('site_settings')
        .select('id')
        .limit(1);

      if (dbError) {
        console.error('‚ùå Database connection failed:', dbError);
        setRecoveryStep('–ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        const { error: retryError } = await supabase
          .from('site_settings')
          .select('id')
          .limit(1);
          
        if (retryError) {
          throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î');
        }
      } else {
        console.log('‚úÖ Database connection recovered');
      }

      // –®–∞–≥ 3: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
      setRecoveryStep('–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è...');
      await new Promise(resolve => setTimeout(resolve, 500));

      // –£–≤–µ–¥–æ–º–ª—è–µ–º –¥—Ä—É–≥–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏
      window.dispatchEvent(new CustomEvent('app-recovered'));
      console.log('üéâ App recovery completed');

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—Ö
      setRecoveryStep('');
      setShowSuccess(true);
      
      // –°–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
      setTimeout(() => {
        setShowSuccess(false);
      }, 3000);

    } catch (error) {
      console.error('‚ùå App recovery failed:', error);
      setRecoveryStep(`–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
      
      // –°–∫—Ä—ã–≤–∞–µ–º –æ—à–∏–±–∫—É —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
      setTimeout(() => {
        setIsRecovering(false);
        setRecoveryStep('');
      }, 5000);
    } finally {
      if (!recoveryStep.includes('–û—à–∏–±–∫–∞')) {
        setIsRecovering(false);
      }
    }
  };

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤–∫–ª–∞–¥–∫–∏
  useEffect(() => {
    const handleVisibilityChange = () => {
      if (document.hidden) {
        // –í–∫–ª–∞–¥–∫–∞ —Å—Ç–∞–ª–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π
        lastActiveTime.current = Date.now();
        console.log('üò¥ Tab became inactive');
      } else {
        // –í–∫–ª–∞–¥–∫–∞ —Å—Ç–∞–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ–π
        const inactiveTime = Date.now() - lastActiveTime.current;
        console.log(`üëÅÔ∏è Tab became active (was inactive for ${Math.round(inactiveTime / 1000)}s)`);
        
        // –ï—Å–ª–∏ –±—ã–ª–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ –±–æ–ª—å—à–µ 30 —Å–µ–∫—É–Ω–¥ - –∑–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
        if (inactiveTime > 30000) {
          console.log('‚ö†Ô∏è Long inactivity detected - starting recovery');
          
          // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–∞—É—Ç
          if (recoveryTimeout.current) {
            clearTimeout(recoveryTimeout.current);
          }
          
          // –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
          recoveryTimeout.current = setTimeout(() => {
            recoverApp();
          }, 2000);
        }
      }
    };

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏
    document.addEventListener('visibilitychange', handleVisibilityChange);

    // –¢–∞–∫–∂–µ —Å–ª—É—à–∞–µ–º focus/blur –Ω–∞ window
    const handleFocus = () => {
      if (!document.hidden) {
        const inactiveTime = Date.now() - lastActiveTime.current;
        if (inactiveTime > 30000) {
          console.log('üîç Window focus - starting recovery');
          setTimeout(recoverApp, 1000);
        }
      }
    };

    const handleBlur = () => {
      lastActiveTime.current = Date.now();
    };

    window.addEventListener('focus', handleFocus);
    window.addEventListener('blur', handleBlur);

    return () => {
      document.removeEventListener('visibilitychange', handleVisibilityChange);
      window.removeEventListener('focus', handleFocus);
      window.removeEventListener('blur', handleBlur);
      if (recoveryTimeout.current) {
        clearTimeout(recoveryTimeout.current);
      }
    };
  }, []);

  // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∏—á–µ–≥–æ –µ—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  if (!isRecovering && !showSuccess) {
    return null;
  }

  return (
    <div className="fixed top-4 left-1/2 transform -translate-x-1/2 z-50">
      {isRecovering && (
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 shadow-lg max-w-sm">
          <div className="flex items-center gap-3">
            <RefreshCw className="w-5 h-5 text-blue-600 animate-spin flex-shrink-0" />
            <div className="flex-1">
              <h4 className="font-semibold text-blue-800 text-sm">
                –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
              </h4>
              {recoveryStep && (
                <p className={`text-xs mt-1 ${
                  recoveryStep.includes('–û—à–∏–±–∫–∞') 
                    ? 'text-red-600' 
                    : 'text-blue-600'
                }`}>
                  {recoveryStep}
                </p>
              )}
              {!recoveryStep && (
                <p className="text-blue-600 text-xs mt-1">
                  –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...
                </p>
              )}
            </div>
          </div>
        </div>
      )}

      {showSuccess && (
        <div className="bg-green-50 border border-green-200 rounded-lg p-4 shadow-lg max-w-sm">
          <div className="flex items-center gap-3">
            <CheckCircle className="w-5 h-5 text-green-600 flex-shrink-0" />
            <div className="flex-1">
              <h4 className="font-semibold text-green-800 text-sm">
                –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
              </h4>
              <p className="text-green-600 text-xs mt-1">
                –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ
              </p>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default AppRecovery;